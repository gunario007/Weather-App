{"ast":null,"code":"var _jsxFileName = \"F:\\\\weather-forecast\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst key = \"a74e21e2e11290ddc996d96f101cb1c8\";\nconst city = \"London\";\nconst App = () => {\n  _s();\n  const [city, setCity] = useState('');\n  const [data, setData] = useState();\n  const fetchData = async () => {\n    try {\n      const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${key}`);\n      setData(response.data);\n    } catch (err) {\n      alert('please enter city name correctly');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"Title\",\n      children: \"weather\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"input\",\n        value: city,\n        onChange: e => setCity(e.target.value),\n        placeholder: \"enter the city name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: () => fetchData(),\n        children: \"Fetch\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: data && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: data.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"2jH7sHeirj0xNBbLgc+ZcAIWmkc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","key","city","App","_s","setCity","data","setData","fetchData","response","get","err","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","name","_c","$RefreshReg$"],"sources":["F:/weather-forecast/src/App.js"],"sourcesContent":["import React, { useState } from 'react'\nimport axios from 'axios'\nimport './App.css'\n\nconst key=\"a74e21e2e11290ddc996d96f101cb1c8\";\n\nconst city=\"London\";\n\nconst App = () => {\n\n  const [city,setCity]=useState('');\n  const [data,setData]=useState();\n\n\n\n\n  const fetchData=async()=>{\n    try{\n      const response=await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${key}`);\n      setData(response.data);\n    }\n    catch(err){\n      alert('please enter city name correctly');\n\n    }\n\n\n  }\n\n\n\n\n\n  return (\n    <div className=\"App\">\n      <h2 className='Title'>weather</h2>\n\n      <div className='input-container'>\n        <input type=\"text\"\n        className='input'\n        value={city}\n        onChange={e=>setCity(e.target.value)}\n          placeholder='enter the city name'\n        />\n        <button className=\"button\" onClick={()=>fetchData()}>Fetch</button>\n      </div>\n\n      <div>\n        {data && (\n          <div className='container'>\n            {data.name}\n          </div>\n        )}\n      </div>\n      \n    </div>\n  )\n}\n\nexport default App\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElB,MAAMC,GAAG,GAAC,kCAAkC;AAE5C,MAAMC,IAAI,GAAC,QAAQ;AAEnB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEhB,MAAM,CAACF,IAAI,EAACG,OAAO,CAAC,GAACR,QAAQ,CAAC,EAAE,CAAC;EACjC,MAAM,CAACS,IAAI,EAACC,OAAO,CAAC,GAACV,QAAQ,CAAC,CAAC;EAK/B,MAAMW,SAAS,GAAC,MAAAA,CAAA,KAAS;IACvB,IAAG;MACD,MAAMC,QAAQ,GAAC,MAAMX,KAAK,CAACY,GAAG,CAAE,qDAAoDR,IAAK,UAASD,GAAI,EAAC,CAAC;MACxGM,OAAO,CAACE,QAAQ,CAACH,IAAI,CAAC;IACxB,CAAC,CACD,OAAMK,GAAG,EAAC;MACRC,KAAK,CAAC,kCAAkC,CAAC;IAE3C;EAGF,CAAC;EAMD,oBACEZ,OAAA;IAAKa,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBd,OAAA;MAAIa,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAElClB,OAAA;MAAKa,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC9Bd,OAAA;QAAOmB,IAAI,EAAC,MAAM;QAClBN,SAAS,EAAC,OAAO;QACjBO,KAAK,EAAElB,IAAK;QACZmB,QAAQ,EAAEC,CAAC,IAAEjB,OAAO,CAACiB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QACnCI,WAAW,EAAC;MAAqB;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC,CAAC,eACFlB,OAAA;QAAQa,SAAS,EAAC,QAAQ;QAACY,OAAO,EAAEA,CAAA,KAAIjB,SAAS,CAAC,CAAE;QAAAM,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChE,CAAC,eAENlB,OAAA;MAAAc,QAAA,EACGR,IAAI,iBACHN,OAAA;QAAKa,SAAS,EAAC,WAAW;QAAAC,QAAA,EACvBR,IAAI,CAACoB;MAAI;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP;IACN;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEH,CAAC;AAEV,CAAC;AAAAd,EAAA,CAjDKD,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AAmDT,eAAeA,GAAG;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}